"""add_comprehensive_nutrition_models

Revision ID: ea2505e259c0
Revises: add_trainer_client_relationship
Create Date: 2025-06-24 05:23:54.912870

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea2505e259c0'
down_revision = 'add_trainer_client_relationship'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nutrition_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('daily_calories', sa.Integer(), nullable=True),
    sa.Column('protein_target', sa.Integer(), nullable=True),
    sa.Column('carbs_target', sa.Integer(), nullable=True),
    sa.Column('fat_target', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nutrition_plans_id'), 'nutrition_plans', ['id'], unique=False)
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('instructions', sa.String(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.Column('carbs', sa.Integer(), nullable=True),
    sa.Column('fat', sa.Integer(), nullable=True),
    sa.Column('preparation_time', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipes_id'), 'recipes', ['id'], unique=False)
    op.create_table('weigh_ins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('body_fat', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weigh_ins_id'), 'weigh_ins', ['id'], unique=False)
    op.create_table('planned_meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nutrition_plan_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('meal_type', sa.Enum('BREAKFAST', 'LUNCH', 'DINNER', 'SNACK', name='mealtype'), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=True),
    sa.Column('time_of_day', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['nutrition_plan_id'], ['nutrition_plans.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_planned_meals_id'), 'planned_meals', ['id'], unique=False)
    op.create_table('meal_completions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('planned_meal_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'SKIPPED', name='mealstatus'), nullable=False),
    sa.Column('photo_path', sa.String(), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['planned_meal_id'], ['planned_meals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_completions_id'), 'meal_completions', ['id'], unique=False)
    op.drop_index('ix_session_completions_id', table_name='session_completions')
    op.drop_table('session_completions')
    op.drop_index('ix_progress_records_id', table_name='progress_records')
    op.drop_table('progress_records')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('progress_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('workout_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('body_fat_percentage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('muscle_mass', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], name='progress_records_client_id_fkey'),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plans.id'], name='progress_records_workout_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='progress_records_pkey')
    )
    op.create_index('ix_progress_records_id', 'progress_records', ['id'], unique=False)
    op.create_table('session_completions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('workout_session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('duration_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('difficulty_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], name='session_completions_client_id_fkey'),
    sa.ForeignKeyConstraint(['workout_session_id'], ['workout_sessions.id'], name='session_completions_workout_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='session_completions_pkey')
    )
    op.create_index('ix_session_completions_id', 'session_completions', ['id'], unique=False)
    op.drop_index(op.f('ix_meal_completions_id'), table_name='meal_completions')
    op.drop_table('meal_completions')
    op.drop_index(op.f('ix_planned_meals_id'), table_name='planned_meals')
    op.drop_table('planned_meals')
    op.drop_index(op.f('ix_weigh_ins_id'), table_name='weigh_ins')
    op.drop_table('weigh_ins')
    op.drop_index(op.f('ix_recipes_id'), table_name='recipes')
    op.drop_table('recipes')
    op.drop_index(op.f('ix_nutrition_plans_id'), table_name='nutrition_plans')
    op.drop_table('nutrition_plans')
    # ### end Alembic commands ### 