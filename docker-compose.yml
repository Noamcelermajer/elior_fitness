version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/elior_fitness
      - JWT_SECRET=your-secret-key-here
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
<<<<<<< HEAD
=======
      - TEST_MODE=${TEST_MODE:-false}
      - TEST_UNIT=${TEST_UNIT:-1}
>>>>>>> origin/dev
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c '
        echo "Waiting for database to be ready..."
        while ! nc -z db 5432; do
          sleep 0.1
        done
        echo "Database is ready!"
        echo "Running database migrations..."
        alembic upgrade head
<<<<<<< HEAD
        echo 'Starting the application...'
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
=======
        if [ "$TEST_MODE" = "true" ]; then
          echo "Purging test database..."
          echo "Installing psql client..."
          apt-get update -qq && apt-get install -y -qq postgresql-client
          echo "Dropping database..."
          PGPASSWORD=postgres psql -h db -U postgres -d postgres -c "DROP DATABASE IF EXISTS elior_fitness;"
          echo "Creating fresh database..."
          PGPASSWORD=postgres psql -h db -U postgres -d postgres -c "CREATE DATABASE elior_fitness;"
          echo "Running database migrations..."
          alembic upgrade head
          if [ "$TEST_UNIT" = "1" ]; then
            echo "Running ALL old tests (unit 1)"
            python -m pytest tests/ -v --cov=app --cov-report=term-missing
          elif [ "$TEST_UNIT" = "2" ]; then
            echo "Running Sprint 2 tests (unit 2)"
            python -m pytest tests/test_exercises.py tests/test_workouts.py -v --cov=app --cov-report=term-missing
          else
            echo "Running ALL tests (default)"
            python -m pytest tests/ -v --cov=app --cov-report=term-missing
          fi
        else
          echo "Starting the application..."
          uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
        fi
      '
>>>>>>> origin/dev

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=elior_fitness
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db

volumes:
  postgres_data: 