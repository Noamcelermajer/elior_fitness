DATABASE SCHEMA (SQLite with SQLAlchemy)

CORE TABLES:

USERS & PROFILES:
users: id, username, email, hashed_password, full_name, role, is_active, trainer_id, created_at, updated_at
trainer_profiles: id, user_id, specialization, bio, years_of_experience, certification
client_profiles: id, user_id, trainer_id, height, target_weight, fitness_goals, medical_conditions, dietary_restrictions

WORKOUT SYSTEM:
exercises: id, name, description, video_url, muscle_group, equipment_needed, instructions, created_by, created_at
workout_plans: id, name, description, trainer_id, client_id, start_date, end_date, created_at, updated_at
workout_sessions: id, workout_plan_id, name, day_of_week, notes, created_at
workout_exercises: id, workout_session_id, exercise_id, order, sets, reps, weight, rest_time, notes
exercise_completions: id, workout_exercise_id, client_id, completed_at, actual_sets, actual_reps, weight_used, difficulty_rating, notes, form_photo_path

NUTRITION SYSTEM:
meal_plans: id, client_id, trainer_id, date, title, total_calories, protein_target, carb_target, fat_target, notes, created_at
meal_entries: id, meal_plan_id, name, order_index, notes
meal_components: id, meal_entry_id, type, description, calories, protein, carbs, fat, is_optional
meal_uploads: id, client_id, meal_entry_id, image_path, marked_ok, uploaded_at
recipes: id, trainer_id, name, description, instructions, calories, protein, carbs, fat, preparation_time, created_at

LEGACY NUTRITION (for backward compatibility):
nutrition_plans: id, client_id, trainer_id, name, description, daily_calories, protein_target, carbs_target, fat_target, start_date, end_date, created_at, updated_at
planned_meals: id, nutrition_plan_id, recipe_id, meal_type, day_of_week, time_of_day, notes
meal_completions: id, planned_meal_id, client_id, status, photo_path, completed_at, notes
nutrition_entries: id, client_id, date, weight, notes, created_at, updated_at

PROGRESS & TRACKING:
progress_entries: id, client_id, date, weight, body_fat, notes, created_at
weigh_ins: id, client_id, weight, body_fat, notes, recorded_at

FILE MANAGEMENT:
file_uploads: id, user_id, filename, original_filename, file_path, file_size, mime_type, upload_type, created_at
thumbnails: id, file_id, thumbnail_path, size, created_at

NOTIFICATIONS:
notifications: id, sender_id, recipient_id, type, title, message, is_read, created_at

KEY RELATIONSHIPS:
- users.trainer_id -> users.id (self-referencing for trainer-client)
- workout_plans.trainer_id/client_id -> users.id
- exercises.created_by -> users.id
- meal_plans.trainer_id/client_id -> users.id
- All foreign keys properly indexed for performance

ENUMS:
UserRole: admin, trainer, client
MuscleGroup: chest, back, shoulders, biceps, triceps, legs, core, cardio, full_body, other
MealType: breakfast, lunch, dinner, snack, pre_workout, post_workout
MealStatus: pending, completed, skipped
ComponentType: protein, carb, fat, vegetable, fruit, other

DATABASE FEATURES:
- SQLite for simplicity and portability
- SQLAlchemy ORM with relationship management
- Automatic timestamps (created_at, updated_at)
- Proper indexing on foreign keys and search fields
- Cascade deletes for related data
- Data integrity constraints 