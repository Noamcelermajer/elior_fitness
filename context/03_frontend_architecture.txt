FRONTEND ARCHITECTURE (React/TypeScript)

MAIN APPLICATION: Frontend/src/App.tsx
- React Router setup with role-based routing
- Query Client for data fetching
- Context providers for auth and notifications
- Toast notifications (Sonner + shadcn/ui)

TECH STACK:
- React 18 with TypeScript
- Vite for build tooling
- Tailwind CSS for styling
- shadcn/ui component library
- React Query for server state
- React Router for navigation

PAGES (Frontend/src/pages/):
Index.tsx: Main dashboard
Login.tsx: Authentication page
AdminDashboard.tsx: Admin system management
TrainerDashboard.tsx: Trainer overview
ClientProfile.tsx: Client management
MealsPage.tsx: Nutrition tracking
TrainingPage.tsx: Workout management
ProgressPage.tsx: Progress tracking
CreateWorkoutPage.tsx: Workout creation
CreateExercisePage.tsx: Exercise creation
CreateMealPlanPage.tsx: Meal plan creation
WorkoutDetailPage.tsx: Workout details
UsersPage.tsx: User management
SystemPage.tsx: System administration
ClientsPage.tsx: Client listing

COMPONENTS (Frontend/src/components/):
Layout.tsx: Main layout wrapper
ProtectedRoute.tsx: Role-based route protection
PublicRoute.tsx: Public route wrapper
NotificationBell.tsx: Notification indicator
NotificationContainer.tsx: Notification display
NotificationToast.tsx: Toast notifications
MealMenu.tsx: Meal planning interface
ProgressTracking.tsx: Progress visualization
TrainingPlan.tsx: Workout plan display

UI COMPONENTS (Frontend/src/components/ui/):
Complete shadcn/ui component library
- Button, Input, Card, Dialog, etc.
- Form components with validation
- Data display components
- Navigation components

CONTEXTS (Frontend/src/contexts/):
AuthContext.tsx: Authentication state management
NotificationContext.tsx: Notification state management

SERVICES (Frontend/src/services/):
notificationService.ts: WebSocket notification handling

CONFIG (Frontend/src/config/):
api.ts: API configuration and endpoints

HOOKS (Frontend/src/hooks/):
use-mobile.tsx: Mobile detection
use-toast.ts: Toast notification hooks

ROUTING STRUCTURE:
Public: /login
Admin: /admin, /users, /system
Trainer: /trainer-dashboard, /client/:id, /create-*
Shared: /, /meals, /training, /progress, /clients

KEY FEATURES:
- Role-based routing and access control
- Real-time notifications via WebSocket
- Responsive design with mobile support
- Form validation and error handling
- Optimistic updates with React Query
- Toast notifications for user feedback
- Protected routes with authentication
- Modern UI with shadcn/ui components

BUILD & DEPLOYMENT:
- Vite for fast development and optimized builds
- TypeScript for type safety
- Tailwind CSS for utility-first styling
- Local development with hot reload (port 5173)
- Production build served by FastAPI or Docker
- API configuration auto-detects environment

API CONFIGURATION:
- Local Development: http://localhost:8000/api
- Production/Docker: Same origin /api
- Configured in Frontend/src/config/api.ts
- Environment variable override: VITE_API_URL 