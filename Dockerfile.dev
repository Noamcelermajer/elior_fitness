# Multi-stage build for development
FROM node:18-alpine AS frontend-builder

# Set working directory for frontend
WORKDIR /frontend

# Copy frontend package files
COPY Frontend/package*.json ./

# Install frontend dependencies
RUN npm ci

# Copy frontend source code
COPY Frontend/ ./

# Build frontend for development
RUN npm run build:dev

# API stage
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    netcat-traditional \
    nginx \
    libmagic1 \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy API code
COPY app/ ./app/

# Copy built frontend from frontend-builder stage
COPY --from=frontend-builder /frontend/dist /var/www/html

# Create necessary directories
RUN mkdir -p uploads data

# Copy Nginx configuration
COPY nginx/nginx.dev.conf /etc/nginx/nginx.conf

# Create startup script
RUN echo '#!/bin/bash\n\
echo "Starting Nginx..."\n\
nginx\n\
echo "Starting FastAPI..."\n\
uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose port
EXPOSE 80 8000

# Start both Nginx and FastAPI
CMD ["/app/start.sh"] 