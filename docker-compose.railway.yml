services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.railway
    container_name: elior-api-railway
    ports:
      - "80:80"  # Railway will handle port mapping
      # API port 8000 is internal only - not exposed externally
    volumes:
      - ./uploads:/app/uploads
      - sqlite_data:/app/data  # Mount volume for SQLite database
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///./data/elior_fitness.db
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key-for-testing-only}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=https://eliorfitness-production.up.railway.app,http://localhost:3000,http://127.0.0.1:3000
      - DOMAIN=eliorfitness-production.up.railway.app
      - MAX_FILE_SIZE=5242880  # 5MB for minimal storage
      - UPLOAD_DIR=/app/uploads
      - LOG_LEVEL=WARNING  # Reduced logging for performance
      - ENABLE_DEBUG_LOGGING=false
    command: >
      sh -c "
        echo '=== ELIOR FITNESS RAILWAY STARTUP ==='
        echo 'Timestamp: $(date)'
        echo 'Environment: Production (Railway)'
        echo 'Database: SQLite (Minimal Resources)'
        echo 'Frontend: Port 80 (Railway SSL)'
        echo 'API: Internal Only (No External Access)'
        echo 'Health: Internal Only (/health)'
        echo 'Docs: Internal Only (/docs)'
        echo 'Starting Railway Nginx and FastAPI...'
        /app/start.sh
      "
    restart: unless-stopped
    # RESOURCE LIMITS FOR MINIMAL USAGE
    deploy:
      resources:
        limits:
          memory: 512M  # Hard limit on memory usage
          cpus: '1.0'   # Limit to 1 CPU core
        reservations:
          memory: 256M  # Reserve 256MB minimum
          cpus: '0.5'   # Reserve 0.5 CPU core
    logging:
      driver: "json-file"
      options:
        max-size: "5m"   # Reduced log size
        max-file: "2"    # Reduced log files

volumes:
  sqlite_data: 